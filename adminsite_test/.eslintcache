[{"C:\\W\\ReactFolder\\adminsite_test\\src\\index.js":"1","C:\\W\\ReactFolder\\adminsite_test\\src\\layouts\\Admin.js":"2","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Footers\\AdminFooter.js":"3","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Navbars\\AdminNavbar.js":"4","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Sidebar\\Sidebar.js":"5","C:\\W\\ReactFolder\\adminsite_test\\src\\routes.js":"6","C:\\W\\ReactFolder\\adminsite_test\\src\\variables\\charts.js":"7","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\Header.js":"8","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\Dashboard.js":"9","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\jobOffer.js":"10","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\addModal.js":"11","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\JobOffer.js":"12","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\AddModal.js":"13","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\Clients.js":"14","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\Employee.js":"15","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\Services.js":"16","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Person\\Person.js":"17","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\JobTime.js":"18","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\ContactUs\\ContactUs.js":"19","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Settings\\Settings.js":"20","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\AddModal.js":"21","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\AddModal.js":"22","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\AddModal.js":"23","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\JobLevel.js":"24","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\RequiredAssessment\\RequiredAssessment.js":"25","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\EditModal.js":"26","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\EditModal.js":"27","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\AddModal.js":"28","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\EditModal.js":"29","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\EditModal.js":"30","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\Category.js":"31","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\EditModal.js":"32","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddModal.js":"33","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\EditModal.js":"34","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddSkillModal.js":"35","C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\UserHeader.js":"36","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\Profile.js":"37","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\EditModal.js":"38","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\EmployeeSelection.js":"39","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Login\\Login.js":"40","C:\\W\\ReactFolder\\adminsite_test\\src\\layouts\\Auth.js":"41","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Login\\EditModal.js":"42","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\EditModal1.js":"43","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\EditModal2.js":"44","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\addSkills.js":"45"},{"size":751,"mtime":1609554130562,"results":"46","hashOfConfig":"47"},{"size":1882,"mtime":1609201798448,"results":"48","hashOfConfig":"47"},{"size":753,"mtime":1607640604941,"results":"49","hashOfConfig":"47"},{"size":2636,"mtime":1609686524235,"results":"50","hashOfConfig":"47"},{"size":5707,"mtime":1609181860740,"results":"51","hashOfConfig":"47"},{"size":3345,"mtime":1609636088768,"results":"52","hashOfConfig":"47"},{"size":9927,"mtime":1607389815247,"results":"53","hashOfConfig":"47"},{"size":7210,"mtime":1609612838413,"results":"54","hashOfConfig":"47"},{"size":3767,"mtime":1609537703470,"results":"55","hashOfConfig":"47"},{"size":4314,"mtime":1607717786226,"results":"56","hashOfConfig":"47"},{"size":1059,"mtime":1607717794852,"results":"57","hashOfConfig":"47"},{"size":8029,"mtime":1609387699647,"results":"58","hashOfConfig":"47"},{"size":3904,"mtime":1608721816784,"results":"59","hashOfConfig":"47"},{"size":4655,"mtime":1609387657369,"results":"60","hashOfConfig":"47"},{"size":11858,"mtime":1609686776509,"results":"61","hashOfConfig":"47"},{"size":8108,"mtime":1609387747211,"results":"62","hashOfConfig":"47"},{"size":30693,"mtime":1609675834964,"results":"63","hashOfConfig":"47"},{"size":7983,"mtime":1609387709781,"results":"64","hashOfConfig":"47"},{"size":7460,"mtime":1609401958786,"results":"65","hashOfConfig":"47"},{"size":4385,"mtime":1609112121122,"results":"66","hashOfConfig":"47"},{"size":6366,"mtime":1609384183009,"results":"67","hashOfConfig":"47"},{"size":3899,"mtime":1609168023013,"results":"68","hashOfConfig":"47"},{"size":3896,"mtime":1609167076951,"results":"69","hashOfConfig":"47"},{"size":8140,"mtime":1609387691277,"results":"70","hashOfConfig":"47"},{"size":0,"mtime":1608581965625,"results":"71","hashOfConfig":"47"},{"size":4785,"mtime":1609165024528,"results":"72","hashOfConfig":"47"},{"size":4759,"mtime":1609167201400,"results":"73","hashOfConfig":"47"},{"size":3910,"mtime":1609170486913,"results":"74","hashOfConfig":"47"},{"size":4784,"mtime":1609270553497,"results":"75","hashOfConfig":"47"},{"size":4763,"mtime":1609168298987,"results":"76","hashOfConfig":"47"},{"size":12963,"mtime":1609640182581,"results":"77","hashOfConfig":"47"},{"size":4868,"mtime":1609370751921,"results":"78","hashOfConfig":"47"},{"size":3931,"mtime":1609186948217,"results":"79","hashOfConfig":"47"},{"size":4828,"mtime":1609182636333,"results":"80","hashOfConfig":"47"},{"size":5697,"mtime":1609373849089,"results":"81","hashOfConfig":"47"},{"size":1106,"mtime":1609207306482,"results":"82","hashOfConfig":"47"},{"size":13685,"mtime":1609686746814,"results":"83","hashOfConfig":"47"},{"size":11606,"mtime":1609372007518,"results":"84","hashOfConfig":"47"},{"size":31955,"mtime":1609686687680,"results":"85","hashOfConfig":"47"},{"size":8814,"mtime":1609686926587,"results":"86","hashOfConfig":"47"},{"size":2132,"mtime":1609554290199,"results":"87","hashOfConfig":"47"},{"size":8249,"mtime":1609635660040,"results":"88","hashOfConfig":"47"},{"size":8299,"mtime":1609647546376,"results":"89","hashOfConfig":"47"},{"size":7557,"mtime":1609647768146,"results":"90","hashOfConfig":"47"},{"size":2207,"mtime":1609686158050,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1jhsqlk",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\W\\ReactFolder\\adminsite_test\\src\\index.js",[],["195","196"],"C:\\W\\ReactFolder\\adminsite_test\\src\\layouts\\Admin.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Footers\\AdminFooter.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Sidebar\\Sidebar.js",["197","198","199","200","201","202","203","204","205","206","207","208"],"import React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <h1 className=\"navbar-brand-img\">GFA</h1> \n            </NavbarBrand>\n          ) : null}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    innerLink: PropTypes.string,\n    outterLink: PropTypes.string,\n    imgSrc: PropTypes.string.isRequired,\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","C:\\W\\ReactFolder\\adminsite_test\\src\\routes.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\variables\\charts.js",[],["209","210"],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\Header.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\Dashboard.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\jobOffer.js",["211"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\joboffer\\addModal.js",["212","213","214","215","216"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\JobOffer.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\AddModal.js",["217"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_offer/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                name_job_offer:event.target.JobName.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Job Offer\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobName\">\r\n                                    <Form.Label>Job Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobName\"\r\n                                        required\r\n                                        placeholder=\"Job Name\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Job Name\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Clients\\Clients.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\Employee.js",["218","219","220"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\Services.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Person\\Person.js",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\JobTime.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\ContactUs\\ContactUs.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Settings\\Settings.js",["247"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../style.css';\r\nimport {Alert } from 'react-bootstrap';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nclass Settings extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        offset: 0,\r\n        tableData: [],\r\n        orgtableData: [],\r\n        perPage: 5,\r\n        currentPage: 0\r\n    }\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({\r\n        currentPage: selectedPage,\r\n        offset: offset\r\n    }, () => {\r\n        this.loadMoreData()\r\n    });\r\n  };\r\n\r\n  loadMoreData() {\r\n  const data = this.state.orgtableData;\r\n  const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      tableData:slice\r\n    })\r\n  }\r\n\r\n  getData() {\r\n    axios\r\n    .get(`https://jsonplaceholder.typicode.com/albums`)\r\n    .then(res => {\r\n      var data = res.data;\r\n      var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n      this.setState({\r\n        pageCount: Math.ceil(data.length / this.state.perPage),\r\n        orgtableData :res.data,\r\n        tableData:slice\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"header bg-gradient-dark pb-8 pt-5 pt-md-8\">\r\n          <Container fluid>\r\n            <div className=\"header-body\">\r\n              <Button variant=\"primary\" style={{color:\"blue\"}}>Hide</Button>\r\n              <Button variant=\"success\" style={{color:\"green\"}}>Change</Button>\r\n              <Button variant=\"danger\" style={{color:\"red\"}}>Edit</Button>\r\n              <Button variant=\"danger\" style={{color:\"black\"}}>Save</Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <h3 className=\"mb-0\">Tables</h3>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                  <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Linkedin</th>\r\n                      <th scope=\"col\">Level</th>\r\n                      <th scope=\"col\">Phone</th>\r\n                      <th scope=\"col\">Country</th>\r\n                      <th scope=\"col\">Job</th>\r\n                      <th scope=\"col\">Company Name</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {this.state.tableData.map((tdata,i) => (\r\n                    <tr>\r\n                      <td>{tdata.id}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                      <td>{tdata.title}</td>\r\n                    </tr>\r\n                    )\r\n                  )}\r\n                  </tbody>\r\n                </Table>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n          <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\AddModal.js",["248"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n            email:'',\r\n            password: '',\r\n            confirmPassword: '',\r\n            value:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const { password, confirmPassword } = this.state;\r\n        if (password !== confirmPassword) {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:\"Password doesn't match\"\r\n            });\r\n        } else {\r\n            fetch('http://localost:3000/add_employee/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                email_employee:event.target.Email.value,\r\n                password_employee:event.target.Password.value,\r\n                level_employee:event.target.value.value,\r\n            })\r\n        })\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Employee\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"Email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        name=\"Email\"\r\n                                        required\r\n                                        placeholder=\"email\"\r\n                                        onChange={(e) => this.setState({ email: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"Password\"\r\n                                        required\r\n                                        placeholder=\"password\"\r\n                                        onChange={(e) => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"ConfirmPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"ConfirmPassword\"\r\n                                        required\r\n                                        placeholder=\"confirm password\"\r\n                                        onChange={(e) => this.setState({ confirmPassword: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Level\">\r\n                                    <Form.Label>Level</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\" value={this.state.value} onChange={this.handleChange}>\r\n                                        <option value=\"2\">Manager</option>\r\n                                        <option value=\"1\">Employee</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>                                 \r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Employee\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\AddModal.js",["249"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_service/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                name_service:event.target.Service.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Service\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"Service\">\r\n                                    <Form.Label>Job Service</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"Service\"\r\n                                        required\r\n                                        placeholder=\"Job Service\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Service\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\AddModal.js",["250"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_time/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                job_time:event.target.JobTime.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Job Time\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobTime\">\r\n                                    <Form.Label>Job Time</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobTime\"\r\n                                        required\r\n                                        placeholder=\"Job Time\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Job Time\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\JobLevel.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\RequiredAssessment\\RequiredAssessment.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Joboffer\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobTime\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\AddModal.js",["251"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_level/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                name_job_level:event.target.JobLevel.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Job Level\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobLevel\">\r\n                                    <Form.Label>Job Level</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobLevel\"\r\n                                        required\r\n                                        placeholder=\"Job Level\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Job Level\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\JobLevel\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Services\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\Category.js",["252","253","254"],"import React from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../style.css';\r\nimport AddModal from './AddModal';\r\nimport EditModal from './EditModal';\r\nimport AddSkillModal from './AddSkillModal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Table,\r\n  Container,\r\n  Row,\r\n  ButtonToolbar,\r\n  CardFooter,\r\n  Button,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nclass Category extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n        offset: 0,\r\n        tableData: [],\r\n        orgtableData: [],\r\n        perPage: 5,\r\n        currentPage: 0,\r\n        isLoading:false,\r\n        isDataAvailable:false,\r\n        addModalShow:false,\r\n        editModalShow:false,\r\n        addSkillModalShow:false,\r\n\r\n        offset1: 0,\r\n        tableData1: [],\r\n        orgtableData1: [],\r\n        perPage1: 5,\r\n        currentPage1: 0,\r\n        isLoading1:false,\r\n        isDataAvailable1:false,\r\n\r\n        Snackbaropen :false,\r\n        Snackbarmsg:'',\r\n    }\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n    this.handlePageClick1 = this.handlePageClick1.bind(this);\r\n  }\r\n\r\n  SnackbarClose =(e) =>{\r\n    this.setState({\r\n      Snackbaropen:false\r\n    });\r\n  }\r\n\r\n  \r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n\r\n    this.setState({\r\n        currentPage: selectedPage,\r\n        offset: offset\r\n    }, () => {\r\n        this.loadMoreData()\r\n    });\r\n  };\r\n\r\n  handlePageClick1 = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage1;\r\n\r\n    this.setState({\r\n        currentPage1: selectedPage,\r\n        offset1: offset\r\n    }, () => {\r\n        this.loadMoreData1()\r\n    });\r\n  };\r\n\r\n  loadMoreData() {\r\n  const data = this.state.orgtableData;\r\n  const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      tableData:slice\r\n    })\r\n  }\r\n\r\n  loadMoreData1() {\r\n    const data = this.state.orgtableData1;\r\n    const slice = data.slice(this.state.offset1, this.state.offset1 + this.state.perPage1)\r\n      this.setState({\r\n        pageCount1: Math.ceil(data.length / this.state.perPage1),\r\n        tableData1:slice\r\n      })\r\n    }\r\n  componentWillMount(){\r\n    this.getData();\r\n    this.getData1();\r\n  }\r\n\r\n  getData() {\r\n    fetch('http://127.0.0.1:5000/table_search_job_category/')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      var data1 = data;\r\n      var slice = data1.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n      this.setState({\r\n        pageCount: Math.ceil(data1.length / this.state.perPage),\r\n        orgtableData :data,\r\n        tableData:slice,\r\n        isDataAvailable:true,\r\n        isLoading:true,\r\n      });\r\n    });\r\n  }\r\n\r\n  getData1() {\r\n    fetch('http://127.0.0.1:5000/table_search_sub_job_category/')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      var data1 = data;\r\n      var slice = data1.slice(this.state.offset1, this.state.offset1 + this.state.perPage1)\r\n      this.setState({\r\n        pageCount1: Math.ceil(data1.length / this.state.perPage1),\r\n        orgtableData1 :data,\r\n        tableData1:slice,\r\n        isDataAvailable1:true,\r\n        isLoading1:true,\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteJobCategory(job_category_name){\r\n    if(window.confirm('Are you sure you want to delete it?')){\r\n      fetch('http://127.0.0.1:5000/delete_job_category/', {\r\n        method:'POST',\r\n        mode: 'cors',\r\n        headers:new Headers({\r\n            'Content-Type':'application/json',\r\n            'Access-Control-Allow-Origin':'*'\r\n        }),\r\n        body:JSON.stringify({\r\n            job_category_name:job_category_name,\r\n        })\r\n      })\r\n      .then(function(response) {\r\n        return response.json()\r\n    })\r\n    .then((result) => {\r\n        this.setState({\r\n            Snackbaropen:true,\r\n            Snackbarmsg:'deleted successfully'\r\n        });\r\n    },\r\n    (error)=>{\r\n        this.setState({\r\n            Snackbaropen:true,\r\n            Snackbarmsg:'Failed'\r\n        });\r\n    })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {tableData, tableData1, oldJobCategoryName, category } = this.state;\r\n    let addModalClose=()=> this.setState({addModalShow:false});\r\n    let editModalClose=()=> this.setState({editModalShow:false});\r\n    let addSkillModalClose=()=> this.setState({addSkillModalShow:false});\r\n    const isLoading = this.state.isLoading;\r\n    const isDataAvailable = this.state.isDataAvailable;\r\n    const isLoading1 = this.state.isLoading1;\r\n    const isDataAvailable1 = this.state.isDataAvailable1;\r\n    return (\r\n      <>\r\n             <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n        <div className=\"header bg-gradient-red pb-8 pt-5 pt-md-8\">\r\n          <Container fluid>\r\n            <div className=\"header-body\">\r\n              <ButtonToolbar>\r\n                <IconButton aria-label=\"add\">\r\n                  <AddIcon  onClick={()=> this.setState({addModalShow:true})}/>\r\n                </IconButton>\r\n                <AddModal \r\n                  show = {this.state.addModalShow}\r\n                  onHide={addModalClose}\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={e => e.preventDefault()}\r\n                  size=\"sm\"\r\n                  style={{marginLeft:\"50px\"}}\r\n                  onClick={()=> this.setState({addSkillModalShow:true})}\r\n                  >\r\n                    Add job skills\r\n                  </Button>\r\n                  <AddSkillModal \r\n                  show = {this.state.addSkillModalShow}\r\n                  onHide={addSkillModalClose}\r\n                />\r\n              </ButtonToolbar>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className=\"mt--7\" fluid>\r\n          <Row>\r\n            <div className=\"col\">\r\n              <Card className=\"shadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <h3 className=\"mb-0\">Table 1 -Job Category-</h3>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                  <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">Name Job Category</th>\r\n                      <th scope=\"col\">Name Job Offer</th>\r\n                      <th scope=\"col\">Actions</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                    {isDataAvailable\r\n                    ?\r\n                    <tbody>\r\n                      {tableData.map((tdata,index) => (\r\n                        <tr>\r\n                          <td>{index+1}</td>\r\n                          <td>{tdata.job_category_name}</td>\r\n                          <td>{tdata.name_job_offer}</td>\r\n                          <td>\r\n                            <ButtonToolbar>\r\n                                <IconButton aria-label=\"edit\">\r\n                                    <EditIcon\r\n                                    onClick={() => this.setState({\r\n                                    editModalShow:true,\r\n                                    oldJobCategoryName : tdata.job_category_name\r\n                                    })}\r\n                                    />\r\n                                </IconButton>\r\n                                <IconButton aria-label=\"delete\">\r\n                                    <DeleteIcon  onClick={() => this.deleteJobCategory(tdata.job_category_name)}/>\r\n                                </IconButton>                            \r\n                                <EditModal \r\n                                    show = {this.state.editModalShow}\r\n                                    onHide={editModalClose}\r\n                                    oldJobCategoryName = {oldJobCategoryName}\r\n                                />\r\n                            </ButtonToolbar>\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                      )}\r\n                      </tbody>\r\n                    :<tbody>\r\n                      <tr>\r\n                        <td>No matching record data</td>\r\n                      </tr>\r\n                    </tbody>\r\n                    }\r\n                </Table>\r\n                <CardFooter className=\"py-4\">\r\n                  <nav aria-label=\"...\">\r\n                  {isLoading\r\n                  ?                    \r\n                    <ReactPaginate\r\n                      previousLabel={\"prev\"}\r\n                      nextLabel={\"next\"}\r\n                      breakLabel={\"...\"}\r\n                      breakClassName={\"break-me\"}\r\n                      pageCount={this.state.pageCount}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={5}\r\n                      onPageChange={this.handlePageClick}\r\n                      containerClassName={\"pagination\"}\r\n                      subContainerClassName={\"pages pagination\"}\r\n                      activeClassName={\"active\"}\r\n                    />\r\n                    :\r\n                    <div style={{height:\"200px\"}}></div>\r\n                  }\r\n                  </nav>\r\n                </CardFooter>\r\n                \r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n        <Container className=\"mt--10\" fluid>\r\n          <Row className=\"mt-5\">\r\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n              <Card className=\"bg-gradient-defaultshadow\">\r\n                <CardHeader className=\"border-0\">\r\n                  <h3 className=\"mb-0\">Table 2 -Sub Job Category-</h3>\r\n                </CardHeader>\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                  <thead className=\"thead-light\">\r\n                  <tr>\r\n                      <th scope=\"col\">#</th>\r\n                      <th scope=\"col\">job category name</th>\r\n                      <th scope=\"col\">sub job category name</th>\r\n                      <th scope=\"col\" />\r\n                    </tr>\r\n                  </thead>\r\n                    {isDataAvailable1\r\n                    ?\r\n                    <tbody>\r\n                      {tableData1.map((tdata,index) => (\r\n                        <tr>\r\n                          <td>{index+1}</td>\r\n                          <td>{tdata.job_category_name}</td>\r\n                          <td>{tdata.sub_job_category_name}</td>\r\n                        </tr>\r\n                      )\r\n                      )}\r\n                      </tbody>\r\n                    :<tbody>\r\n                      <tr>\r\n                        <td>No matching record data</td>\r\n                      </tr>\r\n                    </tbody>\r\n                    }\r\n                </Table>\r\n                <CardFooter className=\"py-4\">\r\n                  <nav aria-label=\"...\">\r\n                  {isLoading1\r\n                  ?                    \r\n                    <ReactPaginate\r\n                      previousLabel={\"prev\"}\r\n                      nextLabel={\"next\"}\r\n                      breakLabel={\"...\"}\r\n                      breakClassName={\"break-me\"}\r\n                      pageCount={this.state.pageCount1}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={5}\r\n                      onPageChange={this.handlePageClick1}\r\n                      containerClassName={\"pagination\"}\r\n                      subContainerClassName={\"pages pagination\"}\r\n                      activeClassName={\"active\"}\r\n                    />\r\n                    :\r\n                    <div style={{height:\"200px\"}}></div>\r\n                  }\r\n                  </nav>\r\n                </CardFooter>\r\n                \r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Employee\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddModal.js",["255"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n      }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://127.0.0.1:5000/add_job_category/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json',\r\n                'Access-Control-Allow-Origin':'*'\r\n            },\r\n            body:JSON.stringify({\r\n                job_category_name:event.target.JobCategory.value\r\n            })\r\n        })\r\n        .then(res =>res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'added successfully'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Failed'\r\n            });\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Category\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"JobCategory\">\r\n                                    <Form.Label>Category Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"JobCategory\"\r\n                                        required\r\n                                        placeholder=\"Category Name\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Add Category\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Category\\AddSkillModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\components\\Headers\\UserHeader.js",["256"],"import React from \"react\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n          style={{\r\n            minHeight: \"600px\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center top\"\r\n          }}\r\n        >\r\n          {/* Mask */}\r\n          <span className=\"mask bg-gradient-default opacity-8\" />\r\n          {/* Header container */}\r\n          <Container className=\"d-flex align-items-center\" fluid>\r\n            <Row>\r\n              <Col lg=\"7\" md=\"10\">\r\n                <h1 className=\"display-2 text-white\">Hello</h1>\r\n                <p className=\"text-white mt-0 mb-5\">\r\n                  This is your profile page. You can see the progress you've\r\n                  made with your work and manage your projects or assigned tasks\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default UserHeader;\r\n","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\Profile.js",["257"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Profile\\EditModal.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\EmployeeSelection.js",["258","259","260","261","262","263","264","265","266","267","268","269","270"],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Login\\Login.js",["271","272","273","274","275","276","277","278","279","280","281","282","283"],"C:\\W\\ReactFolder\\adminsite_test\\src\\layouts\\Auth.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\Login\\EditModal.js",["284","285","286","287"],"import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Snackbaropen :false,\r\n            Snackbarmsg:'',\r\n            email:'',\r\n            password: '',\r\n            confirmPassword: '',\r\n            value:'',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    SnackbarClose =(e) =>{\r\n        this.setState({\r\n          Snackbaropen:false\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        console.log(this.state.value)\r\n        const { password, confirmPassword } = this.state;\r\n        if (password !== confirmPassword) {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:\"Password doesn't match\"\r\n            });\r\n        } else {\r\n            if (this.state.value == \"employee\")\r\n            {fetch('http://localost:3000/change_password_employee/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                email_employee:event.target.Email.value,\r\n                password_employee:event.target.Password.value,\r\n            })\r\n        })\r\n        .then((result) => {\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Password change succeeded'\r\n            });\r\n        },\r\n        (error)=>{\r\n            this.setState({\r\n                Snackbaropen:true,\r\n                Snackbarmsg:'Password change failed'\r\n            });\r\n        })}\r\n        else if (this.state.value == \"client\")\r\n        {fetch('http://localost:3000/change_password_client/',{\r\n        method:'POST',\r\n        headers:{\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            company_email_client:event.target.Email.value,\r\n            password_client:event.target.Password.value,\r\n        })\r\n    })\r\n    .then((result) => {\r\n        this.setState({\r\n            Snackbaropen:true,\r\n            Snackbarmsg:'Password change succeeded'\r\n        });\r\n    },\r\n    (error)=>{\r\n        this.setState({\r\n            Snackbaropen:true,\r\n            Snackbarmsg:'Password change failed'\r\n        });\r\n    })}\r\n    else if (this.state.value == \"applicant\")\r\n    {fetch('http://localost:3000/change_password_person/',{\r\n    method:'POST',\r\n    headers:{\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify({\r\n        email_person:event.target.Email.value,\r\n        password_person:event.target.Password.value,\r\n    })\r\n})\r\n.then((result) => {\r\n    this.setState({\r\n        Snackbaropen:true,\r\n        Snackbarmsg:'Password change succeeded'\r\n    });\r\n},\r\n(error)=>{\r\n    this.setState({\r\n        Snackbaropen:true,\r\n        Snackbarmsg:'Password change failed'\r\n    });\r\n})}\r\n    }\r\n    }\r\n    validateForm() { \r\n        return this.state.email.length > 0 &&\r\n         this.state.password.length > 0 &&\r\n         this.state.confirmPassword.length > 0 &&\r\n         this.state.value.length > 0;\r\n      }\r\n    render(){\r\n        return(\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.Snackbaropen}\r\n                autoHideDuration={3000}\r\n                onClose={this.SnackbarClose}\r\n                message ={<span id=\"massage-id\">{this.state.Snackbarmsg}</span>}\r\n                action={[\r\n                    <IconButton \r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.SnackbarClose}\r\n                    >\r\n                    x\r\n                    </IconButton>\r\n                ]}\r\n            /> \r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Change Password\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Form.Group controlId = \"Email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        name=\"Email\"\r\n                                        required\r\n                                        placeholder=\"email\"\r\n                                        defaultValue = {this.props.email}\r\n                                        onChange={(e) => this.setState({ email: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"Password\">\r\n                                    <Form.Label>New Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"Password\"\r\n                                        required\r\n                                        placeholder=\"password\"\r\n                                        onChange={(e) => this.setState({ password: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId = \"ConfirmPassword\">\r\n                                    <Form.Label>Confirm New Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        name=\"ConfirmPassword\"\r\n                                        required\r\n                                        placeholder=\"confirm password\"\r\n                                        onChange={(e) => this.setState({ confirmPassword: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Level\">\r\n                                    <Form.Label>I am an/a</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue = {this.props.selectedOption} value={this.state.value} onChange={this.handleChange}>\r\n                                        <option value=\"employee\">employee</option>\r\n                                        <option value=\"client\">client</option>\r\n                                        <option value=\"applicant\">applicant</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>                                 \r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\" disabled={!this.validateForm()}>\r\n                                        Change Account Password\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddModal;","C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\EditModal1.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\EditModal2.js",[],"C:\\W\\ReactFolder\\adminsite_test\\src\\views\\examples\\EmployeeSelection\\addSkills.js",[],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":5,"column":3,"nodeType":"294","messageId":"295","endLine":5,"endColumn":9},{"ruleId":"292","severity":1,"message":"296","line":6,"column":3,"nodeType":"294","messageId":"295","endLine":6,"endColumn":7},{"ruleId":"292","severity":1,"message":"297","line":7,"column":3,"nodeType":"294","messageId":"295","endLine":7,"endColumn":13},{"ruleId":"292","severity":1,"message":"298","line":8,"column":3,"nodeType":"294","messageId":"295","endLine":8,"endColumn":11},{"ruleId":"292","severity":1,"message":"299","line":9,"column":3,"nodeType":"294","messageId":"295","endLine":9,"endColumn":12},{"ruleId":"292","severity":1,"message":"300","line":14,"column":3,"nodeType":"294","messageId":"295","endLine":14,"endColumn":17},{"ruleId":"292","severity":1,"message":"301","line":15,"column":3,"nodeType":"294","messageId":"295","endLine":15,"endColumn":12},{"ruleId":"292","severity":1,"message":"302","line":21,"column":3,"nodeType":"294","messageId":"295","endLine":21,"endColumn":8},{"ruleId":"292","severity":1,"message":"303","line":27,"column":3,"nodeType":"294","messageId":"295","endLine":27,"endColumn":11},{"ruleId":"292","severity":1,"message":"304","line":28,"column":3,"nodeType":"294","messageId":"295","endLine":28,"endColumn":8},{"ruleId":"292","severity":1,"message":"305","line":34,"column":5,"nodeType":"294","messageId":"295","endLine":34,"endColumn":7},{"ruleId":"292","severity":1,"message":"306","line":75,"column":13,"nodeType":"294","messageId":"295","endLine":75,"endColumn":20},{"ruleId":"288","replacedBy":"307"},{"ruleId":"290","replacedBy":"308"},{"ruleId":"292","severity":1,"message":"309","line":5,"column":8,"nodeType":"294","messageId":"295","endLine":5,"endColumn":16},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"311","line":2,"column":24,"nodeType":"294","messageId":"295","endLine":2,"endColumn":27},{"ruleId":"292","severity":1,"message":"312","line":2,"column":29,"nodeType":"294","messageId":"295","endLine":2,"endColumn":32},{"ruleId":"292","severity":1,"message":"313","line":2,"column":34,"nodeType":"294","messageId":"295","endLine":2,"endColumn":38},{"ruleId":"314","severity":1,"message":"315","line":5,"column":5,"nodeType":"316","messageId":"317","endLine":7,"endColumn":6},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"319","line":93,"column":25,"nodeType":"320","messageId":"321","endLine":93,"endColumn":27},{"ruleId":"318","severity":1,"message":"319","line":93,"column":50,"nodeType":"320","messageId":"321","endLine":93,"endColumn":52},{"ruleId":"318","severity":1,"message":"319","line":103,"column":25,"nodeType":"320","messageId":"321","endLine":103,"endColumn":27},{"ruleId":"292","severity":1,"message":"322","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"323","line":245,"column":33,"nodeType":"320","messageId":"321","endLine":245,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":246,"column":7,"nodeType":"326","endLine":246,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":247,"column":29,"nodeType":"320","messageId":"321","endLine":247,"endColumn":31},{"ruleId":"324","severity":1,"message":"325","line":248,"column":7,"nodeType":"326","endLine":248,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":250,"column":33,"nodeType":"320","messageId":"321","endLine":250,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":251,"column":7,"nodeType":"326","endLine":251,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":252,"column":29,"nodeType":"320","messageId":"321","endLine":252,"endColumn":31},{"ruleId":"324","severity":1,"message":"325","line":253,"column":7,"nodeType":"326","endLine":253,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":255,"column":33,"nodeType":"320","messageId":"321","endLine":255,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":256,"column":7,"nodeType":"326","endLine":256,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":257,"column":29,"nodeType":"320","messageId":"321","endLine":257,"endColumn":31},{"ruleId":"324","severity":1,"message":"325","line":258,"column":7,"nodeType":"326","endLine":258,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":264,"column":26,"nodeType":"320","messageId":"321","endLine":264,"endColumn":28},{"ruleId":"318","severity":1,"message":"323","line":265,"column":23,"nodeType":"320","messageId":"321","endLine":265,"endColumn":25},{"ruleId":"318","severity":1,"message":"323","line":266,"column":25,"nodeType":"320","messageId":"321","endLine":266,"endColumn":27},{"ruleId":"318","severity":1,"message":"323","line":267,"column":25,"nodeType":"320","messageId":"321","endLine":267,"endColumn":27},{"ruleId":"318","severity":1,"message":"323","line":268,"column":25,"nodeType":"320","messageId":"321","endLine":268,"endColumn":27},{"ruleId":"318","severity":1,"message":"319","line":276,"column":27,"nodeType":"320","messageId":"321","endLine":276,"endColumn":29},{"ruleId":"318","severity":1,"message":"319","line":282,"column":26,"nodeType":"320","messageId":"321","endLine":282,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":288,"column":28,"nodeType":"320","messageId":"321","endLine":288,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":294,"column":28,"nodeType":"320","messageId":"321","endLine":294,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":300,"column":28,"nodeType":"320","messageId":"321","endLine":300,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":323,"column":39,"nodeType":"320","messageId":"321","endLine":323,"endColumn":41},{"ruleId":"318","severity":1,"message":"319","line":345,"column":48,"nodeType":"320","messageId":"321","endLine":345,"endColumn":50},{"ruleId":"318","severity":1,"message":"319","line":367,"column":41,"nodeType":"320","messageId":"321","endLine":367,"endColumn":43},{"ruleId":"292","severity":1,"message":"327","line":5,"column":9,"nodeType":"294","messageId":"295","endLine":5,"endColumn":14},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"328","line":11,"column":8,"nodeType":"294","messageId":"295","endLine":11,"endColumn":18},{"ruleId":"292","severity":1,"message":"329","line":176,"column":55,"nodeType":"294","messageId":"295","endLine":176,"endColumn":63},{"ruleId":"330","severity":1,"message":"331","line":219,"column":19,"nodeType":"332","endLine":219,"endColumn":73},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":16},{"ruleId":"292","severity":1,"message":"322","line":6,"column":9,"nodeType":"294","messageId":"295","endLine":6,"endColumn":14},{"ruleId":"292","severity":1,"message":"322","line":4,"column":9,"nodeType":"294","messageId":"295","endLine":4,"endColumn":14},{"ruleId":"292","severity":1,"message":"333","line":9,"column":8,"nodeType":"294","messageId":"295","endLine":9,"endColumn":16},{"ruleId":"318","severity":1,"message":"323","line":219,"column":32,"nodeType":"320","messageId":"321","endLine":219,"endColumn":34},{"ruleId":"324","severity":1,"message":"325","line":220,"column":5,"nodeType":"326","endLine":220,"endColumn":15},{"ruleId":"318","severity":1,"message":"323","line":221,"column":26,"nodeType":"320","messageId":"321","endLine":221,"endColumn":28},{"ruleId":"324","severity":1,"message":"325","line":222,"column":5,"nodeType":"326","endLine":222,"endColumn":15},{"ruleId":"318","severity":1,"message":"323","line":224,"column":33,"nodeType":"320","messageId":"321","endLine":224,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":225,"column":7,"nodeType":"326","endLine":225,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":226,"column":29,"nodeType":"320","messageId":"321","endLine":226,"endColumn":31},{"ruleId":"324","severity":1,"message":"325","line":227,"column":7,"nodeType":"326","endLine":227,"endColumn":17},{"ruleId":"292","severity":1,"message":"334","line":249,"column":11,"nodeType":"294","messageId":"295","endLine":249,"endColumn":19},{"ruleId":"292","severity":1,"message":"335","line":250,"column":11,"nodeType":"294","messageId":"295","endLine":250,"endColumn":23},{"ruleId":"330","severity":1,"message":"331","line":268,"column":29,"nodeType":"332","endLine":268,"endColumn":45},{"ruleId":"292","severity":1,"message":"336","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":23},{"ruleId":"292","severity":1,"message":"337","line":2,"column":25,"nodeType":"294","messageId":"295","endLine":2,"endColumn":30},{"ruleId":"292","severity":1,"message":"338","line":2,"column":32,"nodeType":"294","messageId":"295","endLine":2,"endColumn":36},{"ruleId":"292","severity":1,"message":"339","line":2,"column":38,"nodeType":"294","messageId":"295","endLine":2,"endColumn":45},{"ruleId":"292","severity":1,"message":"322","line":3,"column":9,"nodeType":"294","messageId":"295","endLine":3,"endColumn":14},{"ruleId":"340","severity":1,"message":"341","line":28,"column":7,"nodeType":"342","messageId":"321","endLine":28,"endColumn":19},{"ruleId":"340","severity":1,"message":"343","line":29,"column":7,"nodeType":"342","messageId":"321","endLine":29,"endColumn":18},{"ruleId":"318","severity":1,"message":"319","line":52,"column":34,"nodeType":"320","messageId":"321","endLine":52,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":76,"column":28,"nodeType":"320","messageId":"321","endLine":76,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":90,"column":39,"nodeType":"320","messageId":"321","endLine":90,"endColumn":41},{"ruleId":"318","severity":1,"message":"319","line":112,"column":29,"nodeType":"320","messageId":"321","endLine":112,"endColumn":31},{"ruleId":"318","severity":1,"message":"319","line":126,"column":39,"nodeType":"320","messageId":"321","endLine":126,"endColumn":41},{"ruleId":"318","severity":1,"message":"319","line":147,"column":29,"nodeType":"320","messageId":"321","endLine":147,"endColumn":31},{"ruleId":"292","severity":1,"message":"310","line":1,"column":16,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"319","line":42,"column":34,"nodeType":"320","messageId":"321","endLine":42,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":66,"column":35,"nodeType":"320","messageId":"321","endLine":66,"endColumn":37},{"ruleId":"318","severity":1,"message":"319","line":90,"column":31,"nodeType":"320","messageId":"321","endLine":90,"endColumn":33},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'DropdownToggle' is defined but never used.","'FormGroup' is defined but never used.","'Media' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'ps' is defined but never used.","'bgColor' is assigned a value but never used.",["344"],["345"],"'AddModal' is defined but never used.","'Component' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Modal' is defined but never used.","Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Alert' is defined but never used.","'AddBoxIcon' is defined but never used.","'category' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Snackbar' is defined but never used.","'ifFilter' is assigned a value but never used.","'ifFilterpage' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","no-dupe-keys","Duplicate key 'Snackbaropen'.","ObjectExpression","Duplicate key 'Snackbarmsg'.","no-global-assign","no-unsafe-negation"]